// SPDX-FileCopyrightText: 2022-2025 Carnegie Mellon University
// SPDX-License-Identifier: GPL-2.0-only

syntax = "proto3";

option java_multiple_files = true;

import "common.proto";

package edu.cmu.cs.hawk.api;

enum DatasetSplit {
  TRAIN = 0;
  TEST = 1;
}

message MissionId {
  string value = 1;
}

message ScoutConfiguration {
  string missionId = 1;
  repeated string scouts = 2;
  int32 scoutIndex = 3;
  string homeIP = 4;
  string trainLocation = 5;
  string missionDirectory = 6;
  TrainConfig trainStrategy = 7;
  RetrainPolicyConfig retrainPolicy = 8;
  Dataset dataset = 9;
  SelectiveConfig selector = 10;
  ReexaminationStrategyConfig reexamination = 11;
  ModelArchive initialModel = 12;
  ModelArchive baseModel = 13;
  bytes bootstrapZip = 14;
  map<int32, string> bandwidthFunc = 15;
  bool validate = 16;
  repeated string class_list = 17;
  PerScoutSCMLOptions scml_deploy_opts = 18;
  bool novel_class_discovery = 19;
  bool sub_class_discovery = 20;
}

message MissionStats {
  int64 totalObjects = 1;
  int64 processedObjects = 2;
  int64 droppedObjects = 3;
  int64 falseNegatives = 4;
  map<string, string> others = 5;
}

message TestResults {
  int64 testExamples = 1;
  double auc = 2;
  ModelMetrics modelMetrics = 3;
  double bestThreshold = 4;
  repeated double precisions = 5;
  repeated double recalls = 6;
  int32 version = 7;
}

message MissionResults {
  map<int32, TestResults> results = 1;
}

message ModelMetrics {
  int64 truePositives = 1;
  int64 falsePositives = 2;
  int64 falseNegatives = 3;
  double precision = 4;
  double recall = 5;
  double f1Score = 6;
}

message ImportModel {
  ModelArchive model = 1;
  string path = 2;
}

message ModelArchive {
  bytes content = 1;
  int32 version = 2;
}

message TrainConfig {
  string trainer = 1;
  map<string, string> config = 2;
}

message RetrainPolicyConfig {
  oneof value {
    AbsolutePolicyConfig absolute = 1;
    PercentagePolicyConfig percentage = 2;
    ModelPolicyConfig model = 3;
    SampleIntervalPolicyConfig sample = 4;
  }
}

message AbsolutePolicyConfig {
  int32 threshold = 1;
  bool onlyPositives = 2;
}

message PercentagePolicyConfig {
  double threshold = 1;
  bool onlyPositives = 2;
}

message ModelPolicyConfig {
  string name = 1;
}

message SampleIntervalPolicyConfig {
  int32 num_intervals = 1;
}

message Dataset {
  string retriever = 1;
  map<string, string> config = 2;
}

message SelectiveConfig {
  oneof value {
    TopKConfig topk = 1;
    ThresholdConfig threshold = 2;
    TokenConfig token = 3;
    DiversityConfig diversity = 4;
  }
}

message TopKConfig {
  int32 k = 1;
  int32 batchSize = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
}

message ThresholdConfig {
  double threshold = 1;
}

message TokenConfig {
  int32 initial_samples = 1;
  int32 batch_size = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
  double upper_threshold_delta = 5;
  double lower_threshold_delta = 6;
  double upper_threshold_start = 7;
  double lower_threshold_start = 8;
  bool sliding_window = 9;
}

message DiversityConfig {
  int32 k = 1;
  int32 batchSize = 2;
  double countermeasure_threshold = 3;
  int32 total_countermeasures = 4;
}

message ReexaminationStrategyConfig {
  string type = 1;
  int32 k = 2;
}

message NoReexaminationStrategyConfig {
}

message TopReexaminationStrategyConfig {
  int32 k = 1;
}

message FullReexaminationStrategyConfig {
}

message SendTile {
  ObjectId object_id = 1;
  int32 scoutIndex = 2;
  int32 version = 3;
  repeated HawkObject oracle_data = 4;
  repeated Detection inferenced = 5;
  repeated Detection groundtruth = 6;
  bytes feature_vector = 7;
  bool novel_sample = 8;
}

// send labels for an object back from home to scout
message SendLabel {
  ObjectId object_id = 1;
  int32 scoutIndex = 2;
  repeated Detection labels = 3;
}

// propagate (positive) labels and other associated data to other scouts
message LabeledTile {
  ObjectId object_id = 1;
  HawkObject obj = 2;
  HawkObject feature_vector = 3;
  repeated Detection labels = 4;
}

message PerScoutSCMLOptions {
  map<string, int32> scout_dict = 1;
}

message ChangeDeploymentStatus {
  bool ActiveStatus = 1;
}
